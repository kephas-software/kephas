# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: 'src/Kephas.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@0
  inputs:
    versionSpec: '>=4.3.0'
    checkLatest: true
- task: DotNetCoreInstaller@0
  inputs:
    packageType: 'sdk'
    version: '6.0.400'

- script: dotnet restore $(solution)
- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    msbuildArchitecture: 'x64'

- task: VSTest@2
  inputs:
    testRunTitle: '.NET Core 3.1'
    testSelector: 'testAssemblies'
    testAssemblyVer2: |
      **\netcoreapp*\*Tests.dll
      !**\*InteractiveTests.dll
      !**\*TestAdapter.dll
      !**\obj\**
    searchFolder: '$(System.DefaultWorkingDirectory)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    runInParallel: true
    codeCoverageEnabled: true

- task: VSTest@2
  inputs:
    testRunTitle: '.NET Core 6.0'
    testSelector: 'testAssemblies'
    testAssemblyVer2: |
      **\net6.0*\*Tests.dll
      !**\*InteractiveTests.dll
      !**\*TestAdapter.dll
      !**\obj\**
    searchFolder: '$(System.DefaultWorkingDirectory)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    runInParallel: true
    codeCoverageEnabled: true
