<Project Sdk="Microsoft.NET.Sdk.Web">

	<PropertyGroup>
		<TargetFrameworks>net6.0;net5.0;netcoreapp3.1</TargetFrameworks>
		<LangVersion>latest</LangVersion>
		<Nullable>enable</Nullable>
		<EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>
		<CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\.generated</CompilerGeneratedFilesOutputPath>

		<TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
		<TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
		<IsPackable>false</IsPackable>
		<SpaRoot>ClientApp\</SpaRoot>
		<DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

		<!-- Set this to true if you enable server-side prerendering -->
		<BuildServerSideRenderer>false</BuildServerSideRenderer>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="Autofac" Version="6.2.0" />
		<PackageReference Include="IdentityServer4" Version="4.1.2" />
		<PackageReference Include="IdentityServer4.AspNetIdentity" Version="4.1.2" />
		<PackageReference Include="Newtonsoft.Json" Version="13.0.1" />
		<PackageReference Include="Serilog.Settings.Configuration" Version="3.2.0" />
		<PackageReference Include="Serilog.Sinks.Console" Version="4.0.0" />
		<PackageReference Include="Serilog.Sinks.Seq" Version="5.0.1" />
		<PackageReference Include="StyleCop.Analyzers" Version="1.1.118">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
	</ItemGroup>

	<Choose>
		<When Condition="'$(TargetFramework)'=='netcoreapp3.1'">
			<ItemGroup>
				<PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="3.1.12" />
				<PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.1.12" />
				<PackageReference Include="Microsoft.AspNetCore.Identity.UI" Version="3.1.12" />
			</ItemGroup>
		</When>
		<When Condition="'$(TargetFramework)'=='net5.0'">
			<ItemGroup>
				<PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="5.0.4" />
				<PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="5.0.4" />
				<PackageReference Include="Microsoft.AspNetCore.Identity.UI" Version="5.0.4" />
			</ItemGroup>
		</When>
		<Otherwise>
			<ItemGroup>
				<PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="6.0.0-rc.2.21480.10" />
				<PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="6.0.0-rc.2.21480.10" />
				<PackageReference Include="Microsoft.AspNetCore.Identity.UI" Version="6.0.0-rc.2.21480.10" />
			</ItemGroup>
		</Otherwise>
	</Choose>

	<ItemGroup>
		<!-- Don't publish the SPA source files, but do show them in the project files list -->
		<Content Remove="$(SpaRoot)**" />
		<None Remove="$(SpaRoot)**" />
		<None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
	</ItemGroup>

	<ItemGroup>
		<Content Remove="stylecop.json" />
	</ItemGroup>

	<ItemGroup>
		<AdditionalFiles Include="stylecop.json" />
	</ItemGroup>

	<ItemGroup>
		<ProjectReference Include="..\..\Analyzers\Kephas.Analyzers\Kephas.Analyzers.csproj" PrivateAssets="all" OutputItemType="Analyzer" ReferenceOutputAssembly="false" />
		<ProjectReference Include="..\..\Kephas.AspNetCore.IdentityServer4\Kephas.AspNetCore.IdentityServer4.csproj" />
		<ProjectReference Include="..\..\Kephas.AspNetCore\Kephas.AspNetCore.csproj" />
		<ProjectReference Include="..\..\Kephas.Commands\Kephas.Commands.csproj" />
		<ProjectReference Include="..\..\Kephas.Commands.Messaging\Kephas.Commands.Messaging.csproj" />
		<ProjectReference Include="..\..\Kephas.Injection.Autofac\Kephas.Injection.Autofac.csproj" />
		<ProjectReference Include="..\..\Kephas.Core\Kephas.Core.csproj" />
		<ProjectReference Include="..\..\Kephas.Core.Endpoints\Kephas.Core.Endpoints.csproj" />
		<ProjectReference Include="..\..\Kephas.Extensions.Hosting\Kephas.Extensions.Hosting.csproj" />
		<ProjectReference Include="..\..\Kephas.Logging.Serilog\Kephas.Logging.Serilog.csproj" />
		<ProjectReference Include="..\..\Kephas.Messaging\Kephas.Messaging.csproj" />
		<ProjectReference Include="..\..\Kephas.Security.Cryptography\Kephas.Security.Cryptography.csproj" />
		<ProjectReference Include="..\..\Kephas.Serialization.NewtonsoftJson\Kephas.Serialization.NewtonsoftJson.csproj" />
	</ItemGroup>

	<ItemGroup>
		<Folder Include="config\" />
	</ItemGroup>

	<Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
		<!-- Ensure Node.js is installed -->
		<Exec Command="node --version" ContinueOnError="true">
			<Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
		</Exec>
		<Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
		<Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
	</Target>

	<Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
		<!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

		<!-- Include the newly-built files in the publish output -->
		<ItemGroup>
			<DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
			<DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
			<ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
				<RelativePath>%(DistFiles.Identity)</RelativePath>
				<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
				<ExcludeFromSingleFile>true</ExcludeFromSingleFile>
			</ResolvedFileToPublish>
		</ItemGroup>
	</Target>

</Project>
