<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ActivatorBase_CannotGetImplementationType_Exception" xml:space="preserve">
    <value>Cannot get the implementation type for the provided abstract type info '{0}'.</value>
  </data>
  <data name="AmbiguousOverrideForAppServiceContract" xml:space="preserve">
    <value>Multiple application services registered for the contract {0} and the override priority does not allow a proper service resolution. The service {1} will be used. Identified eligible parts: {2}.</value>
  </data>
  <data name="DefaultAppManager_InitializeCanceled_Exception" xml:space="preserve">
    <value>The application's initialize procedure was canceled, at {0:s}.</value>
  </data>
  <data name="DefaultAppManager_InitializeFaulted_Exception" xml:space="preserve">
    <value>The application's initialize procedure encountered an exception at {0:s}.</value>
  </data>
  <data name="DefaultSerializationService_SerializerNotFound_Exception" xml:space="preserve">
    <value>A serializer for the media type '{0}' was not found.</value>
  </data>
  <data name="NullServiceExceptionMessage" xml:space="preserve">
    <value>{0} is intended to be replaced by a proper implementation.</value>
  </data>
  <data name="TransitionMonitor_AssertIsCompletedSuccessfully_Exception" xml:space="preserve">
    <value>The {0} of '{1}' is not completed successfully.</value>
  </data>
  <data name="TransitionMonitor_AssertIsCompleted_Exception" xml:space="preserve">
    <value>The {0} of '{1}' is not completed.</value>
  </data>
  <data name="TransitionMonitor_AssertIsInProgress_Exception" xml:space="preserve">
    <value>The {0} of '{1}' is not in progress.</value>
  </data>
  <data name="TransitionMonitor_AssertIsNotStarted_Exception" xml:space="preserve">
    <value>The {0} of '{1}' is already started.</value>
  </data>
  <data name="GraphBaseOfTNodeValue_AmbiguousMatchForValue_Exception" xml:space="preserve">
    <value>Multiple nodes found for value '{0}'.</value>
  </data>
  <data name="CompositionContainerBuilderBase_RequiredServiceMissing_Exception" xml:space="preserve">
    <value>The required service of type '{0}' was not provided.</value>
  </data>
  <data name="AmbientServices_ServiceTypeAndServiceInstanceMismatch_Exception" xml:space="preserve">
    <value>The provided service instance '{0}' is not convertible to the service type '{1}'.</value>
  </data>
  <data name="Serialization_MediaTypeMismatch_Exception" xml:space="preserve">
    <value>Expected {0} instead of {1} media type in the serialization context.</value>
  </data>
  <data name="AssemblyExtensions_GetLoadableExportedTypes_TypeLoadException" xml:space="preserve">
    <value>Cannot load exported type {0} from {1}. Only the loadable types will be considered.</value>
  </data>
  <data name="AssemblyExtensions_GetLoadableExportedTypes_ReflectionTypeLoadException" xml:space="preserve">
    <value>Cannot load all exported types from {0}. Only the loadable types will be considered.</value>
  </data>
  <data name="AppServiceCompositionContractTypeDoesNotMatchServiceContract" xml:space="preserve">
    <value>The specified contract type '{0}' is not assignable from the service contract '{1}'.</value>
  </data>
  <data name="AppServiceMultipleCompositionConstructors" xml:space="preserve">
    <value>Multiple constructors marked with {0} are declared for service implementation '{1}' with contract '{2}'.</value>
  </data>
  <data name="AssemblyExtensions_GetLoadableDefinedTypes_ReflectionTypeLoadException" xml:space="preserve">
    <value>Cannot load all defined types from {0}. Only the loadable types will be considered.</value>
  </data>
  <data name="AppRuntimeBase_CannotLoadAssembly_Exception" xml:space="preserve">
    <value>Cannot load assembly '{0}'. See the exception for more information.</value>
  </data>
  <data name="DefaultAppManager_FinalizeCanceled_Exception" xml:space="preserve">
    <value>The application's finalize procedure was canceled, at {0:s}.</value>
  </data>
  <data name="DefaultAppManager_FinalizeFaulted_Exception" xml:space="preserve">
    <value>The application's finalize procedure encountered an exception at {0:s}.</value>
  </data>
  <data name="DefaultTypeResolver_ResolveType_NotFound_Exception" xml:space="preserve">
    <value>The type '{0}' could not be found.</value>
  </data>
  <data name="DefaultTypeResolver_ResolveType_AmbiguousMatch_Exception" xml:space="preserve">
    <value>Multiple types found for '{0}' : {1}.</value>
  </data>
  <data name="Requires_NotNullOrEmpty_EmptyArgument_Exception" xml:space="preserve">
    <value>Argument '{0}' must not be null nor empty.</value>
  </data>
  <data name="ConfigurationBase_SettingValueNotSupported_Exception" xml:space="preserve">
    <value>Setting a value is not supported by the default implementation of the configuration. Override this in a derived class to provide an implementation.</value>
  </data>
  <data name="ConcurrentCollection_CannotAddItem_Exception" xml:space="preserve">
    <value>Could not add the item {0} to the concurrent collection.</value>
  </data>
  <data name="RuntimeTypeInfo_NoPublicConstructorDefined_Exception" xml:space="preserve">
    <value>No public constructor defined for '{0}', cannot create instances.</value>
  </data>
  <data name="AppServiceConventionsRegistrarBase_AsOpenGenericDoesNotSupportMetadataAttributes_Warning" xml:space="preserve">
    <value>Application service contracts exported as open generics do not support metadata attributes and they will be ignored ('{0}'). Instead, try to pass metadata through generic parameter types.</value>
  </data>
  <data name="RuntimeTypeInfo_PropertyNotFound_Exception" xml:space="preserve">
    <value>Property {0} not found or is not accessible in {1}.</value>
  </data>
  <data name="ExpandoBase_CannotInvokeNonDelegate_Exception" xml:space="preserve">
    <value>Cannot invoke non-delegate value of {0}; it has a type of {1}.</value>
  </data>
  <data name="PartialOrderedSet_BadComparer_ProducesCycles_Exception" xml:space="preserve">
    <value>The provided comparer function produces cycles in the sorted graph. This indicates that there are cyclic dependencies which need to be broken in order to produce an ordered set. Check the following nodes: {0}.</value>
  </data>
  <data name="DefaultAssemblyLoader_LoadAssemblyFromPathNotSupported_Exception" xml:space="preserve">
    <value>Please use a more specific assembly loader, which can load from a file path, like DefaultAssemblyLoader.</value>
  </data>
  <data name="RuntimeTypeInfo_MemberNotFound_Exception" xml:space="preserve">
    <value>Member {0} not found in {1}.</value>
  </data>
  <data name="ActivatorBase_CannotInstantiateAbstractTypeInfo_Exception" xml:space="preserve">
    <value>Cannot instantiate the type '{0}' because it could not be resolved to an implementation type.</value>
  </data>
  <data name="RuntimeTypeInfo_AmbiguousMember_Exception" xml:space="preserve">
    <value>There are multiple members with the name '{0}' in '{1}'. Please use {2} to disambiguate between them.</value>
  </data>
  <data name="DynamicTypeInfo_AddMember_Duplicate_Exception" xml:space="preserve">
    <value>Duplicate member with name '{0}' in '{1}'.</value>
  </data>
  <data name="DynamicTypeInfo_AddBaseType_TypeCannotBeABaseOfItself_Exception" xml:space="preserve">
    <value>The type '{0}' cannot be a base of itself.</value>
  </data>
  <data name="DynamicAssemblyInfo_AddType_Duplicate_Exception" xml:space="preserve">
    <value>Duplicate type with full name '{0}' in '{1}'.</value>
  </data>
  <data name="RuntimePropertyInfo_GetValue_Exception" xml:space="preserve">
    <value>No get accessor for property '{0}' in '{1}'.</value>
  </data>
  <data name="RuntimePropertyInfo_SetValue_Exception" xml:space="preserve">
    <value>No set accessor for property '{0}' in '{1}'.</value>
  </data>
  <data name="DefaultMediaTypeProvider_NotFound_Exception" xml:space="preserve">
    <value>No media type class  found for '{0}'. Resolution: define a class implementing {1} with the indicated media type.</value>
  </data>
  <data name="App_BootstrapAsync_Bootstrapping_Message" xml:space="preserve">
    <value>Bootstrapping the application...</value>
  </data>
  <data name="App_BootstrapAsync_ConfiguringAmbientServices_Message" xml:space="preserve">
    <value>Configuring the ambient services...</value>
  </data>
  <data name="App_BootstrapAsync_InitializingAppManager_Message" xml:space="preserve">
    <value>Initializing the app manager...</value>
  </data>
  <data name="App_BootstrapAsync_ErrorDuringInitialization_Exception" xml:space="preserve">
    <value>Errors occurred during the application bootstrap procedure, please check the exception details for more information.</value>
  </data>
  <data name="App_BootstrapAsync_StartComplete_Message" xml:space="preserve">
    <value>The application bootstrapped successfully.</value>
  </data>
  <data name="App_ShutdownAsync_ShuttingDown_Message" xml:space="preserve">
    <value>Shutting down the application...</value>
  </data>
  <data name="App_ShutdownAsync_ErrorDuringFinalization_Exception" xml:space="preserve">
    <value>Errors occurred during the application shutdown procedure, please check the exception details for more information.</value>
  </data>
  <data name="App_ShutdownAsync_Complete_Message" xml:space="preserve">
    <value>The application shut down successfully. Good bye!</value>
  </data>
  <data name="DefaultTypeResolver_ResolveTypeCore_Exception" xml:space="preserve">
    <value>Errors occurred when trying to resolve type '{0}'.</value>
  </data>
  <data name="App_BootstrapAsync_ErrorDuringConfiguration_Exception" xml:space="preserve">
    <value>Errors occurred during the application configuration procedure, please check the exception details for more information.</value>
  </data>
  <data name="App_BootstrapAsync_ErrorDuringForcedShutdown_Exception" xml:space="preserve">
    <value>Errors occurred during the application forced shut down procedure, please check the exception details for more information.</value>
  </data>
  <data name="DefaultNamedServiceProvider_GetNamedService_NoServiceFound_Exception" xml:space="preserve">
    <value>No service found for {0}/{1}.</value>
  </data>
  <data name="DefaultNamedServiceProvider_GetNamedService_AmbiguousMatch_Exception" xml:space="preserve">
    <value>Multiple services found for {0}/{1}.</value>
  </data>
  <data name="AmbientServices_Instance_MayBeSetOnlyOnce_Exception" xml:space="preserve">
    <value>The globally available instance of the ambient services may be set only once, before reading its value for the first time. Please consider setting its value before any other operation in your application.</value>
  </data>
  <data name="Context_CannotChangeIdentity_Exception" xml:space="preserve">
    <value>Cannot change the identity in the context once it has been set.</value>
  </data>
  <data name="OperationResult_Merge_TaskNotCompleteException" xml:space="preserve">
    <value>Cannot merge the task result, the task is not completed.</value>
  </data>
  <data name="UnhandledException_InProcess_Message" xml:space="preserve">
    <value>Unhandled exception in process.</value>
  </data>
  <data name="UnhandledException_Terminating_Message" xml:space="preserve">
    <value>Unhandled exception terminating the process.</value>
  </data>
  <data name="RuntimeTypeInfo_CreateRuntimeTypeInfo_InvalidType_Exception" xml:space="preserve">
    <value>The type {0} provided in the [{1}] attribute must implement {2}.</value>
  </data>
  <data name="RuntimeTypeInfo_CreateRuntimeTypeInfo_InvalidConstructor_Exception" xml:space="preserve">
    <value>The type {0} provided in the [{1}] attribute must implement have a public constructor accepting a single type parameter.</value>
  </data>
  <data name="TaskNotCompletedException_Message" xml:space="preserve">
    <value>The task is not completed.</value>
  </data>
  <data name="DuplicateKeyException_Message" xml:space="preserve">
    <value>An item with the same key is already added.</value>
  </data>
  <data name="CompositionHelper_ToDictionary_CannotResolveServicePriority_Exception" xml:space="preserve">
    <value>Cannot resolve priorities of service '{0}' for two instances: {1} and {2}.</value>
  </data>
  <data name="AmbientServices_ServiceTypeAndImplementationMismatch_Exception" xml:space="preserve">
    <value>The provided service implementation '{0}' is not convertible to the service type '{1}'.</value>
  </data>
  <data name="AmbientServices_RequiredServiceNotRegistered_Exception" xml:space="preserve">
    <value>The required service '{0}' is not registered, or the factory returned a null value.</value>
  </data>
  <data name="AmbientServices_AmbiguousConstructors_Exception" xml:space="preserve">
    <value>'{0}' has at least two constructors with the same length which can be resolved through composition: ({1}) and ({2}).</value>
  </data>
  <data name="AmbientServices_MissingCompositionConstructor_Exception" xml:space="preserve">
    <value>No composition constructor could be identified for '{0}'. The following parameters could not be resolved: {1}.</value>
  </data>
  <data name="ServiceRegistry_MismatchedMultipleServiceRegistration_Exception" xml:space="preserve">
    <value>The service {0} is registered both as multiple and single service.</value>
  </data>
  <data name="LazyFactory_CircularDependency_Exception" xml:space="preserve">
    <value>Circular dependency involving '{0}' detected.</value>
  </data>
  <data name="AmbientServices_ServiceTypeMustBeSuperOfContractType_Exception" xml:space="preserve">
    <value>The service type '{0}' must be a super type of the contract type '{1}'.</value>
  </data>
  <data name="ServiceRegistrationBuilder_InstancingNotProvided_Exception" xml:space="preserve">
    <value>Either the implementation type, the factory, or the service instance must be provided for '{0}'. Check also whether the {1} value should be set to {2}.</value>
  </data>
  <data name="LiteRegistrationBuilder_InvalidRegistration_Exception" xml:space="preserve">
    <value>One of {0}, {1}, or {2} must be set in service registration.</value>
  </data>
  <data name="LiteRegistrationBuilder_CannotIdentifyConstructedServiceType_Exception" xml:space="preserve">
    <value>Cannot identify the constructed service type of {0} from {1}.</value>
  </data>
  <data name="SettingsProviderSelector_NoProviderFoundForSettingsType" xml:space="preserve">
    <value>No provider found for settings type '{0}'.</value>
  </data>
  <data name="ConfigurationStoreSettingsProvider_SettingsTypeMismatch_Exception" xml:space="preserve">
    <value>The stored settings type '{0}' differs from the requested settings type '{1}'.</value>
  </data>
</root>