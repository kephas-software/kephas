<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DefaultMessageProcessor_AmbiguousHandler_Exception" xml:space="preserve">
    <value>Multiple handlers found for the '{0}' message type: {1}. Please disambiguate by using the [OverridePriority] attribute on them.</value>
  </data>
  <data name="DefaultMessageProcessor_MissingHandler_Exception" xml:space="preserve">
    <value>Could not find a handler for the '{0}' message type.</value>
  </data>
  <data name="MessageHandler_BadMessageType_Exception" xml:space="preserve">
    <value>The message to process must be of type '{0}', received '{1}'.</value>
  </data>
  <data name="DefaultMessageBroker_ReplyToMessageNotFound_Exception" xml:space="preserve">
    <value>Received reply '{0}', which has no corresponding request. Possible cause: a timeout may have had interrupted the communication.</value>
  </data>
  <data name="BrokeredMessage_ContentNullWhenNotReply_Exception" xml:space="preserve">
    <value>The content message may be null only for replies: '{0}'. Use {1}() before setting the content if you intend to create a reply.</value>
  </data>
  <data name="DispatchingContext_NonNegativeTimeout_Exception" xml:space="preserve">
    <value>Cannot specify a negative timeout value.</value>
  </data>
  <data name="DefaultMessageBroker_Timeout_Exception" xml:space="preserve">
    <value>The maximum allotted time of {0} expired for {1}.</value>
  </data>
  <data name="MessageRouterBase_Reply_Exception" xml:space="preserve">
    <value>An error occurred while sending the reply to '{0}'. Please check the exception details for more information.</value>
  </data>
  <data name="BrokeredMessageHandler_ProcessAndRespond_Exception" xml:space="preserve">
    <value>The response processing is faulted.</value>
  </data>
  <data name="BrokeredMessageHandler_ProcessAndRespond_Canceled" xml:space="preserve">
    <value>The response processing was canceled.</value>
  </data>
  <data name="BrokeredMessageHandler_ProcessAndReply_Exception" xml:space="preserve">
    <value>The reply processing is faulted.</value>
  </data>
  <data name="BrokeredMessageHandler_ProcessAndReply_Canceled" xml:space="preserve">
    <value>The reply processing was canceled.</value>
  </data>
  <data name="BrokeredMessageHandler_ProcessOneWay_Exception" xml:space="preserve">
    <value>The one-way processing is faulted.</value>
  </data>
  <data name="BrokeredMessageHandler_ProcessOneWay_Canceled" xml:space="preserve">
    <value>The one-way processing was canceled.</value>
  </data>
  <data name="DefaultMessageBroker_LogOnEnqueue_NotAddedError" xml:space="preserve">
    <value>Could not enqueue brokered message (#{0}, {1}) timeout: {2}.</value>
  </data>
  <data name="DefaultMessageBroker_LogOnEnqueue_Success" xml:space="preserve">
    <value>Enqueue brokered message (#{0}, {1}) timeout: {2}.</value>
  </data>
  <data name="MessageAdapter_MessageNotSet_Exception" xml:space="preserve">
    <value>The message is not set in the message adapter.</value>
  </data>
  <data name="DefaultMessageBroker_NoMessageRoutersCanHandleRecipients_Exception" xml:space="preserve">
    <value>Cannot send message to the following recipients: {0}. There is no message router to handle them.</value>
  </data>
  <data name="DefaultMessageBroker_CannotHandleMessagesWithoutRecipients_Exception" xml:space="preserve">
    <value>There is no message router to handle messages without recipients.</value>
  </data>
  <data name="MessageRouterBase_ProcessOneWay_Exception" xml:space="preserve">
    <value>An error occurred while processing the one-way request '{0}'. Please check the exception details for more information.</value>
  </data>
  <data name="DefaultMessageBroker_ErrorsOccurredWhileSending_Exception" xml:space="preserve">
    <value>Errors occurred while sending message '{0}'.</value>
  </data>
  <data name="MessageRouterBase_ErrorsOccurredWhileDispatching_Exception" xml:space="preserve">
    <value>Errors occurred while asynchronously dispatching '{0}'.</value>
  </data>
  <data name="MessageRouterBase_ErrorsOccurredWhileRoutingMessage_Exception" xml:space="preserve">
    <value>Errors occurred while routing message '{0}'.</value>
  </data>
  <data name="MessageRouterBase_ErrorsOccurredWhileProcessingOneWay_Exception" xml:space="preserve">
    <value>Errors occurred while asynchronously processing one way message '{0}'.</value>
  </data>
  <data name="EventHubExtensions_MissingMessagingEventHubImplementation" xml:space="preserve">
    <value>The event hub '{0}' must implement the '{1}' interface to use the messaging extensions.</value>
  </data>
  <data name="InProcessMessageRouter_UnexpectedMessageInOutputQueue" xml:space="preserve">
    <value>Expected only replies in the output queue, instead received '{0}'.</value>
  </data>
  <data name="BrokeredMessage_ContentCannotBeDelegate_Exception" xml:space="preserve">
    <value>The content message may not be a Delegate type: '{0}'.</value>
  </data>
  <data name="BrokeredMessage_RecipientRequired_Exception" xml:space="preserve">
    <value>Must provide at least one recipient if the message is not an event: '{0}'.</value>
  </data>
  <data name="DefaultMessageBroker_ErrorsOccurredWhileRedirecting_Exception" xml:space="preserve">
    <value>Errors occurred while redirecting reply '{0}'.</value>
  </data>
  <data name="DefaultMessageBroker_MissingReplyToMessageId_Exception" xml:space="preserve">
    <value>Received a reply message without the {0} being set ('{0}').</value>
  </data>
  <data name="DefaultMessageBroker_BadReceiverMatchProviderType_Exception" xml:space="preserve">
    <value>The '{0}' receiver match provider does not implement '{1}'.</value>
  </data>
</root>